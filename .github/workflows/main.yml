name: CI Pipeline

on:
  push:
    branches: 
    - master
    - dev
  pull_request:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "latest"]
    
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install make gfortran
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Setup Python environment
      run: |
        python -V
        python -m venv venv
        source venv/bin/activate
        pip install -r etc/CI/requirements.txt
    
    - name: Compile AIMS
      run: |
        source venv/bin/activate
        make --directory=src compile
    
    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: src/*.so
        key: build-${{ github.sha }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13", "latest"]
    needs: build
    
    steps:
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install make gfortran
        
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    
    - name: Setup Python environment
      run: |
        python -V
        python -m venv venv
        source venv/bin/activate
        pip install -r etc/CI/requirements.txt
    
    - name: Restore build artifacts
      uses: actions/cache@v4
      with:
        path: src/*.so
        key: build-${{ github.sha }}
    
    - name: Rebuild if needed
      run: |
        source venv/bin/activate
        make --directory=src compile
    
    - name: Run tests
      run: |
        source venv/bin/activate
        make --directory=src test

  documentation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: "latest"
        cache: 'pip'
    
    - name: Setup Python environment
      run: |
        python -V
        python -m venv venv
        source venv/bin/activate
        pip install -r etc/CI/requirements.txt
    
    - name: Build documentation
      run: |
        source venv/bin/activate
        cd doc
        make html
        mv _build/html/ ../public/
    
    - name: Upload documentation artifacts
      uses: actions/upload-artifact@v3
      with:
        name: documentation
        path: public/
